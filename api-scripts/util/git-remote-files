#!/usr/bin/env python
import requests
import sys
import argparse
parser = argparse.ArgumentParser()
parser.add_argument('name', action='store', help='The name of the repo')
parser.add_argument('--rev', action='store', default="master", help='The name of the revision or branch to search')
parser.add_argument('--project', action='store', default='SALT', help='The project of the repo (default=SALT).')
args = parser.parse_args()


def run(name, rev='master',project='SALT'):
    API_URL = "http://p-bitbucket.imovetv.com/rest/api/1.0/projects/{}/repos/{}/files".format(project, name)
    GIT_USERNAME = "saltmaster"
    GIT_PASSWORD = "tEBFyQVXrCxNBx6uiofkrtpBY7NxhTEv=LwJQrovsmBbKThTsr"
    params = {'limit': '1000','at': rev}
    print(API_URL)
    results = requests.get(API_URL, auth=(GIT_USERNAME, GIT_PASSWORD), params=params)
    if results.ok:
        retval = "git_remote_files:\n"

        files = results.json().get('values', [])
        dirs = list()
        for f in files:
            retval += '  - {}\n'.format(f)
    else:
        retval = "Recieved a {} response from the url ".format(results.status_code)
    return retval


def get_name(url):
    name = url[url.rfind('/')+1:]
    if name.split('.'):
        return name.split('.')[0]
    return name
    
if __name__ == '__main__':
    if not args:
        parser.print_help()
        exit(1)
    print(run(args.name, args.rev, args.project))
