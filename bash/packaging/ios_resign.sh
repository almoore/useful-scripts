#!/bin/sh

die () {
    rm $TMPFILE
    echo "ERROR: $1. Aborting!"
    exit 1
}

TMPFILE=$(mktemp)
#Absolute path to this script
SCRIPT=$(readlink -f $0)
#Absolute path this script is in
SCRIPTPATH=$(dirname $SCRIPT)

echo "Welcome to the ios package resign service."
echo "This script will help you easily set up a package for distributing to ios."
echo
echo "You will need the folowing:"
echo "    Mobile Provisioning Profile"
echo "    Entitlements.plist"
echo "    iOS Distribution Certificate"
echo "    App Prefix"
echo "    App Bundle ID"

#get the ios provision file
_IOS_PROVISION_FILE=( $( ls *.mobileprovision ) )
read -p "Please select the ios provision file name [$_IOS_PROVISION_FILE] " IOS_PROVISION_FILE
if [ -z "$IOS_PROVISION_FILE" ] ; then
	IOS_PROVISION_FILE=$_IOS_PROVISION_FILE
	echo "Selected default - $IOS_PROVISION_FILE"
fi
if [ -f "$IOS_PROVISION_FILE" ] ; then
    echo "Selected - $IOS_PROVISION_FILE"
else
    die "No - Mobile Provisioning Profile"
fi

# get the ios certificate file
_IOS_DISTRIBUTION_CERTIFICATE=( $( ls *.p12 ) )
read -p "Please select the ios distribution certificate file name [$_IOS_DISTRIBUTION_CERTIFICATE] " IOS_DISTRIBUTION_CERTIFICATE
if [ -z "$IOS_DISTRIBUTION_CERTIFICATE" ] ; then
	IOS_DISTRIBUTION_CERTIFICATE=$_IOS_DISTRIBUTION_CERTIFICATE
	echo "Selected default - $IOS_ENTITLEMENTS_PLIST_FILE"
fi
if [ -f "$IOS_DISTRIBUTION_CERTIFICATE" ]; then
	echo "Selected - $IOS_DISTRIBUTION_CERTIFICATE"
else
    die "No - $IOS_DISTRIBUTION_CERTIFICATE"
fi

# get the destination for the plist
_IOS_ENTITLEMENTS_PLIST_FILE="Entitlements.plist"
read -p "Please select the ios entitlements_plist file name [$_IOS_ENTITLEMENTS_PLIST_FILE] " IOS_ENTITLEMENTS_PLIST_FILE
if [ -z "$IOS_ENTITLEMENTS_PLIST_FILE" ] ; then
	IOS_ENTITLEMENTS_PLIST_FILE=$_IOS_ENTITLEMENTS_PLIST_FILE
	echo "Selected default - $IOS_ENTITLEMENTS_PLIST_FILE"
fi

read -p "Please select the ios prefix: " PREFIX
if [ -z "$PREFIX" ] ; then
	die "You must selecte a prefix"
fi

read -p "Please select the ios App Bundle ID: " appBundleID
if [ -z "$appBundleID" ] ; then
	die "You must selecte an App Bundle ID"
fi

echo "Selected provision:"

echo "Provision file           : $IOS_PROVISION_FILE"
echo "Distribution Certificate : $IOS_DISTRIBUTION_CERTIFICATE"
echo "Entitlement.plist        : $IOS_ENTITLEMENTS_PLIST_FILE"
echo "App ID                   : ${PREFIX}.${appBundleID}"
read -p "Is this ok? Then press ENTER to go on or Ctrl-C to abort." _UNUSED_

#mkdir -p "$IOS_OUTDIR" || die "Could not create ios data directory ($IOS_OUTDIR)"

#render the templates

#Generate provision file from the default provision file as template
#changing only the stuff we're controlling from this script
echo "## Generated by iso_resign.sh ##" > $TMPFILE

read -r SED_EXPR <<-EOF
s#^port [0-9]{4}\$#port ${IOS_PORT}#; \
s#^logfile .+\$#logfile ${IOS_LOG_FILE}#; \
s#^dir .+\$#dir ${IOS_DATA_DIR}#; \
s#^pidfile .+\$#pidfile ${PIDFILE}#; \
s#^daemonize no\$#daemonize yes#;
EOF
#sed -r "$SED_EXPR" $DEFAULT_PROVISION  >> $TMPFILE

cp $TMPFILE $IOS_ENTITLEMENTS_PLIST_FILE || die "Could not write ios provision file $IOS_ENTITLEMENTS_PLIST_FILE"

#Generate sample script from template file
rm -f $TMPFILE

cat <<EOF > $IOS_ENTITLEMENTS_PLIST_FILE
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>application-identifier</key>
    <string>${PREFIX}.${appBundleID}</string>
    <key>aps-environment</key>
    <string>production</string>
    <key>get-task-allow</key>
    <false/>
    <key>keychain-access-groups</key>
    <array>
        <string>${PREFIX}.${appBundleID}</string>
    </array>
</dict>
</plist>
EOF

#tada
echo "Signing successful!"
exit 0
